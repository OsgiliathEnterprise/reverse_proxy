---

- name: Nginx-proxy | add interface to public firewall zone {{ reverse_proxy_firewall_zone }}
  ansible.builtin.include_role:
    name: tcharl.ansible_routing
  vars:
    firewalld_zones:
      - name: "{{ reverse_proxy_firewall_zone }}"
        nics:
          - "{{ ansible_containerization_docker_network_interface }}"
        enabled_services:
          - service: https
          - service: http # for letsencrypt http01 challenge

- name: Nginx-proxy | create nginx directories
  ansible.builtin.file:
    state: directory
    dest: '{{ item }}'
    mode: "0753"
  become: true
  with_items:
    - "{{ docker_shared_data_nginx_proxy_path }}"
    - "{{ docker_shared_data_nginx_proxy_certs_path }}"
    - "{{ docker_shared_data_nginx_proxy_vhosts_path }}"
    - "{{ docker_shared_data_nginx_proxy_html_path }}"
    - "{{ docker_shared_data_letsencrypt_path }}"

- name: Nginx-proxy | create default index.html
  ansible.builtin.copy:
    src: index.html
    dest: "{{ docker_shared_data_nginx_proxy_html_path }}"
    owner: root
    group: root
    mode: 0644
  become: true

- name: Nginx-proxy | default domain configuration
  ansible.builtin.copy:
    src: vhost
    dest: "{{ docker_shared_data_nginx_proxy_vhosts_path }}/default"
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Nginx-proxy | configure virtualhost
  ansible.builtin.include_tasks: virtual-host.yml
  loop: "{{ virtual_hosts }}"
  loop_control:
    label: "{{ virtual_host.name }}"
    loop_var: virtual_host

- name: Nginx-proxy | debug volumes to mount
  ansible.builtin.debug:
    msg: "{{ [virtual_hosts | selectattr('volumes', 'defined') | map(attribute='volumes') | list | default([]), '/var/run/docker.sock:/tmp/docker.sock:ro', docker_shared_data_nginx_proxy_certs_path + ':/etc/nginx/certs', docker_shared_data_nginx_proxy_vhosts_path + ':/etc/nginx/vhost.d', docker_shared_data_nginx_proxy_html_path + ':/usr/share/nginx/html'] | flatten | unique }}"
    verbosity: 2

- name: Nginx-proxy | debug dhparams
  ansible.builtin.debug:
    msg: "{{ 'true' if virtual_hosts | selectattr('gen_certs', 'defined') | selectattr('gen_certs', 'equalto', True) | list | length != 0 else 'false' }}"
    verbosity: 2

- name: Nginx-proxy | debug default host
  ansible.builtin.debug:
    msg: "{{ virtual_hosts | selectattr('default_host', 'defined') | selectattr('default_host', 'equalto', True) | selectattr('name', 'defined') | map(attribute='name') | first | default('Not found') }}"
    verbosity: 2

- name: Nginx-proxy | start proxy
  community.docker.docker_container:
    name: nginx-proxy
    image: nginxproxy/nginx-proxy
    restart_policy: "always"
    published_ports: #"{{ virtual_hosts | selectattr('ports_binding', 'defined') | map(attribute='ports_binding') | default(['80:80', '443:443']) | flatten | unique }}" # TODO 80 only if gencerts
      - '80:80'
      - '443:443'
    volumes: "{{ [virtual_hosts | selectattr('volumes', 'defined') | map(attribute='volumes') | list | default([]), '/var/run/docker.sock:/tmp/docker.sock:ro', docker_shared_data_nginx_proxy_certs_path + ':/etc/nginx/certs', docker_shared_data_nginx_proxy_vhosts_path + ':/etc/nginx/vhost.d', docker_shared_data_nginx_proxy_html_path + ':/usr/share/nginx/html'] | flatten | unique }}"
    state: started
    env:
      RESOLVERS: "8.8.8.8"
      DHPARAM_GENERATION: "{{ 'true' if virtual_hosts | selectattr('gen_certs', 'defined') | selectattr('gen_certs', 'equalto', True) | list | length != 0 else 'false' }}"
      DEFAULT_HOST: "{{ virtual_hosts | selectattr('default_host', 'defined') | selectattr('default_host', 'equalto', True) | selectattr('name', 'defined') | map(attribute='name') | first | default(omit) }}"
  become: true

- name: Nginx-proxy | letsencrypt-companion
  community.docker.docker_container:
    name: letsencrypt-companion
    image: nginxproxy/acme-companion
    restart_policy: "always"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ docker_shared_data_letsencrypt_path }}:/etc/acme.sh"
    volumes_from:
      - nginx-proxy
    env:
      DEFAULT_EMAIL: "{{ letsencrypt_default_email | default(omit) }}"
    state: started
  when: virtual_hosts  | selectattr('gen_certs', 'defined') | selectattr('gen_certs', 'equalto', True) | list | length != 0
  become: true
